package Menu;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import javax.swing.*;
import javax.swing.border.Border;
import javax.tools.JavaFileManager;

import Dialog.AboutDialog;
import Dialog.DialogFrame;

public class SwingMenuBarDemoMain extends JFrame{
	
	private AboutDialog dialog;
	private JFileChooser chooser,opener;
	JTextArea textArea = new JTextArea(6,12);
    JScrollPane scrollPane = new JScrollPane(textArea);
    JMenuItem newItem = new JMenuItem("New",new ImageIcon("src/resources/new.png"));
    JMenuItem openItem = new JMenuItem("Open",new ImageIcon("src/resources/open.png"));
    JMenuItem saveItem = new JMenuItem("Save",new ImageIcon("src/resources/save.png"));
    JMenuItem aboutItem = new JMenuItem("About",new ImageIcon("src/resources/open.png"));
    
    
    
    
	
	SwingMenuBarDemoMain(){
		
		//setting 
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		JMenu fileMenu = new JMenu("File");
		menuBar.add(fileMenu);
		
		
		JMenu helpMenu = new JMenu("Help");
		helpMenu.setMnemonic('H');
		menuBar.add(helpMenu);
		
		aboutItem.setMnemonic('A');
		
		JMenu editMenu = new JMenu("Edit");
		menuBar.add(editMenu);
		
		
		
		
		
		
		

		JMenuItem cutItem = new JMenuItem("Cut", new ImageIcon("src/resources/cut.png"));
//		cutItem.setHorizontalTextPosition(SwingConstants.LEFT);
		editMenu.add(cutItem);

		JMenuItem copyItem = new JMenuItem("Copy", new ImageIcon("src/resources/copy.png"));
		editMenu.add(copyItem);

		JMenuItem pasteItem = new JMenuItem("Paste", new ImageIcon("src/resources/paste.png"));
		editMenu.add(pasteItem);
		
		

		chooser = new JFileChooser();
		opener = new JFileChooser();
		
		
		
		newItem.setAccelerator(KeyStroke.getKeyStroke("ctrl N"));
	    fileMenu.add(newItem);
		
		newItem.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				saveConfirm();
			}
		});

		openItem.setAccelerator(KeyStroke.getKeyStroke("ctrl O"));
		fileMenu.add(openItem);
		
		
		
		openItem.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent event)  {
            	chooser.setDialogTitle("Location of file to open");
                chooser.setCurrentDirectory(new File("/home/ishworpanta/Documents/TEXT"));

 				// show file chooser dialog
 				int result = chooser.showOpenDialog(SwingMenuBarDemoMain.this);

                // if image file accepted, set it as icon of the label
                if (result == JFileChooser.APPROVE_OPTION){
                	String fileContent = "";
                   String name = chooser.getSelectedFile().getPath();
                   System.out.println("File Path: "+name);
                   File file = new File(name);
	           		FileInputStream fis = null;
	           		try {
	           			fis = new FileInputStream(file);
	           			System.out.println("Total file size to read in(bytes)" + fis.available());
	           			int content;
	           			while((content = fis.read())!= -1) {
	           				//convert to char and display it
	           				char c = (char) content;
	           				
	           				fileContent += String.valueOf(c);
	           				
	           			}
	           			
	           		}catch(IOException e) {
	           			e.printStackTrace();
	           			
	           		}finally {
	           			try {
	           				if (fis != null) {
	           					fis.close();
	           				}
	           					}catch(IOException ex) {
	           					ex.printStackTrace();
	           				}
	           				
	
	           		}
	           		System.out.print(fileContent);
	           		textArea.setText(fileContent);
                }
             }  
//            JPanel panel = new JPanel();
//     	    JLabel label = new JLabel("Text Editor Made with java swing");
//     	    
          });
		
		
//		saveItem.setEnabled(false);
		fileMenu.add(saveItem);
		
		saveItem.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				opener.setCurrentDirectory(new File("/home/ishworpanta/Documents/TEXT"));
				
				// show file chooser dialog
 				int result = opener.showSaveDialog(SwingMenuBarDemoMain.this);

                // if image file accepted, set it as icon of the label
                if (result == JFileChooser.APPROVE_OPTION){
                   String content = "";
//                   String name = opener.getSelectedFile().getPath();
//                   System.out.println("File Path: "+name);
                   
//                   
                   //saving file in name location
                   
		           		FileOutputStream fop = null;
		        		File file ;
		        		
		        		//getting content from textArea
		        	    content = textArea.getText();
		        	    System.out.println(content);
		        		
		        	    try {
		        			file  =  opener.getSelectedFile();
		        			fop  = new FileOutputStream(file);
		        			
		        			//if file does not exist
		        			
		        			if(!file.exists()) {
		        				file.createNewFile();
		        			}
		        			
		        			//get the content in bytes
		        			byte[] contentInBytes = content.getBytes();
		        			fop.write(contentInBytes);
		        			fop.flush();
		        			fop.close();
		        			System.out.println("Done");
		
		        		}catch(IOException e1) {
		        			e1.printStackTrace();
		        		}finally {
		        			try {
		        				if (fop!=null) {
		        					fop.close();
		        				}
		        			}catch(IOException e1) {
		        				e1.printStackTrace();
		        				
		        			}
		        		}
                   
                   
	           		
                }

				
			}
		});


		
		//JMenuItem aboutItem = new JMenuItem("About",'A');
		
		//Dialog box in about click
	        aboutItem.addActionListener(new ActionListener(){
	              public void actionPerformed(ActionEvent event){
	                 if (dialog == null) // first time
	                 dialog = new AboutDialog(SwingMenuBarDemoMain.this);
	                 dialog.setVisible(true); // pop up dialog
	              }
	        });
	        fileMenu.add(aboutItem);

	        // The Exit item exits the program.

	        JMenuItem exitItem = new JMenuItem("Exit");
	        exitItem.addActionListener(new ActionListener(){
	              public void actionPerformed(ActionEvent event){
	                 System.exit(0);
	              }
	        });
	        fileMenu.add(exitItem);
		
		
		
		
		helpMenu.add(aboutItem);




		JMenu optionsMenu = new JMenu("Options");
		editMenu.add(optionsMenu);

		JCheckBoxMenuItem readonlyItem = new JCheckBoxMenuItem("Read-only",new ImageIcon("src/resources/read.png"));
		readonlyItem.setHorizontalTextPosition(SwingConstants.LEFT);
		JRadioButtonMenuItem insertItem = new JRadioButtonMenuItem("Insert",new ImageIcon("src/resources/insert.png"));
		insertItem.setHorizontalTextPosition(SwingConstants.LEFT);
		
		
    	optionsMenu.add(readonlyItem);
    	optionsMenu.add(insertItem);

    	JPopupMenu popup = new JPopupMenu();
   	    JMenuItem item = new JMenuItem("Cut");
   	    JMenuItem item2 = new JMenuItem("Select All");
	    popup.add(item);
	    popup.add(item2);
	    add(scrollPane);


		setSize(400, 400);
    	setVisible(true);
    	
    	
	}
	
	void saveConfirm() {
		String data=textArea.getText().trim(); //read contents of text area into 'data'
		  if((data.length() > 0) ){
		     newItem.addActionListener(new ActionListener() {
				
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println("I am not empty");
					System.out.println(textArea);
					
					int selection = JOptionPane.showConfirmDialog(null,
							   "Do you want to save existing file", "Confirmation for Saving",
							   JOptionPane.OK_CANCEL_OPTION,
							   JOptionPane.QUESTION_MESSAGE);
							if (selection == JOptionPane.OK_OPTION){
								System.out.println("Save ..");
							}else{
								System.out.println("Cancel....");
					}		
				}
			});
		}
		
	}
	
	
	public static void main(String[] args) {
		new SwingMenuBarDemoMain();
	}
	
}